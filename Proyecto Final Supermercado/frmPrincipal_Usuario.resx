<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>